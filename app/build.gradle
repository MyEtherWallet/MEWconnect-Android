apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: 'com.google.gms.google-services'

int MAJOR_VERSION = 1
int MINOR_VERSION = 0
int MICRO_VERSION = 15
int BUILD_FOR_TODAY = 1

def secretsPropertiesFile = rootProject.file("secrets.properties")
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

androidExtensions {
    experimental = true
}

def getWhatsNew = { ->
    def text = file('../CHANGELOG.md').text
    text = text
            .trim()
            .replace("\r", "")
            .replace("'", "\\'")
            .replace("\n", "\\n")
    return text
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.myetherwallet.mewconnect"
        minSdkVersion 23
        targetSdkVersion 28
        versionName String.format("%d.%d.%d", MAJOR_VERSION, MINOR_VERSION, MICRO_VERSION)
        def date = new Date()
        versionCode Integer.valueOf(String.format("%ty%tm%td%02d", date, date, date, BUILD_FOR_TODAY))
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "CONNECT_API_END_POINT", "\"https://connect.mewapi.io\""
        buildConfigField "String", "NODE_API_END_POINT", "\"https://nodes.mewapi.io/rpc/\""
        buildConfigField "String", "MEW_API_END_POINT", "\"https://mainnet.mewwallet.dev/\""
        buildConfigField "String", "APICCSWAP_API_END_POINT", "\"https://apiccswap.myetherwallet.com/\""
        buildConfigField "String", "APICCSWAP_API_KEY", "\"" + secretsProperties['apiccswapApiKey'] + "\""
        buildConfigField "String", "APICCSWAP_REFERER", "\"" + secretsProperties['apiccswapReferer'] + "\""
        buildConfigField "String", "RATES_API_END_POINT", "\"https://cryptorates.mewapi.io/\""

        resValue "string", "whats_new", getWhatsNew()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.27.0-eap13'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.27.0-eap13'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'com.google.android.material:material:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.airbnb.android:lottie:3.4.0'
    implementation 'com.google.firebase:firebase-core:17.4.0'
    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.1.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    kapt 'com.google.dagger:dagger-compiler:2.22.1'
    implementation 'com.google.dagger:dagger:2.24'
    implementation 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.6.0'
    implementation 'com.nulab-inc:zxcvbn:1.2.5'
    implementation 'com.github.kenglxn.QRGen:android:2.6.0'
    implementation('io.socket:socket.io-client:1.0.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'

    // https://github.com/web3j/web3j/pull/903
    // Fix for supporting long Chain ID
    implementation('org.web3j:rlp:4.2.0-android')
    implementation files('libs/crypto-4.2.0.jar')
    implementation('org.web3j:core:4.2.0-android') {
        exclude group: 'org.web3j', module: 'crypto'
        exclude group: 'org.web3j', module: 'rlp'
    }

    implementation 'org.bitcoinj:bitcoinj-core:0.14.7'
    implementation 'org.webrtc:google-webrtc:1.0.27225'
    implementation "com.github.gnosis.bivrost-kotlin:bivrost-solidity-types:v0.5.4"
    implementation 'com.github.gnosis.svalinn-kotlin:blockies:v0.5.4'

    implementation 'androidx.biometric:biometric:1.0.1'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
